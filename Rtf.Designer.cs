//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Editroid {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Rtf {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Rtf() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Editroid.Rtf", typeof(Rtf).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Tahoma;}{\f1\fmodern\fprq1\fcharset0 Courier New;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\b\f0\fs20 Editing\par
        ///\par
        ///\b0 Virtually everything you see in the editing area can be edited in place, including doors and items. Note the \cf1\f1 Undo\cf0\f0  and \cf1\f1 Redo\cf0\f0  buttons.\par
        ///\par
        ///Map data (item locations and password data) can be displayed via the \cf1\f1 Vie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Editing {
            get {
                return ResourceManager.GetString("Editing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
        ///{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f29\froman\fcharset238\fprq2 Times New Roman CE;}{\f30\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f32\froman\fcharset161\fprq2 Times New Roman Greek;}
        ///{\f33\froman\fcharset162\fprq2 Times New Roman Tur;}{\f34\froman\f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EnhancoNotes {
            get {
                return ResourceManager.GetString("EnhancoNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Tahoma;}}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\b\f0\fs20 Now With Expando!\par
        ///\par
        ///\b0 Editroid can expand a Metroid ROM to provide more memory for screens, structures, combos, item data, and patterns. This also enables you to increase the number of rooms and structures. Just beware that there is no guaruntee when expanding a hacked ROM.\par
        ///\par
        ///Some new features only work with an expanded ROM, such as a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Expando {
            get {
                return ResourceManager.GetString("Expando", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Tahoma;}}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\b\f0\fs20 Working With Other Editors\par
        ///\par
        ///\b0 If an open ROM is edited by another program, Editroid will give you the option to reload the ROM or ignore the changes.\par
        ///\par
        ///There is a third option to reload only patterns (graphics) from disk when the file has changed. This allows both Editroid and an external tile-editor to be used at the same time, remo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExternalChanges {
            get {
                return ResourceManager.GetString("ExternalChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Trebuchet MS;}{\f1\fswiss\fprq2\fcharset0 Tahoma;}{\f2\fnil\fcharset2 Symbol;}}
        ///{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\nowidctlpar\qc\f0\fs48 e\fs32 ditroid\b\f1\fs20\par
        ///\b0 Version 3.0\par
        ///\i\fs16 I hope it works\&apos;99!\par
        ///\par
        ///\pard\nowidctlpar\i0\par
        ///\fs20\par
        ///This is a beta version of Editroid 3.0. It has not been thoroughly debugge [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Intro {
            get {
                return ResourceManager.GetString("Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Tahoma;}{\f1\fswiss\fprq2\fcharset0 Trebuchet MS;}}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\b\f0\fs20 Navigation\par
        ///\par
        ///\b0 Use the map to navigate. Click on a location in the map to center the view there, or drag the view rectangle around the map. You can also scroll the view by dragging with the middle mouse button in the editing area, or by holding shift and using the left mouse button. \f1\par
        ///}
        ///.
        /// </summary>
        internal static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Tahoma;}{\f1\fmodern\fprq1\fcharset0 Courier New;}{\f2\fswiss\fcharset0 Arial;}}
        ///{\colortbl ;\red0\green0\blue255;}
        ///{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\b\f0\fs20 Testing\par
        ///\par
        ///\b0 There are two testing features. One is \cf1\f1 Save And Play\cf0\f0 , under the \cf1\f1 File\cf0\f0  menu, which saves the game data and launches the ROM in the default emulator.\par
        ///\par
        ///There is also the &quot;Test Room&quot; featur [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Testing {
            get {
                return ResourceManager.GetString("Testing", resourceCulture);
            }
        }
    }
}
